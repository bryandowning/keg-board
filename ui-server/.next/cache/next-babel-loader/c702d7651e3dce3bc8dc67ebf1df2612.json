{"ast":null,"code":"var _jsxFileName = \"/Users/jwhite/Repositories/raspberry-pints/ui-server/components/BeerRow.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nconst srmToRGBLookupTable = [\"#FFE699\", \"#FFE699\", \"#FFD878\", \"#FFCA5A\", \"#FFBF42\", \"#FBB123\", \"#F8A600\", \"#F39C00\", \"#EA8F00\", \"#E58500\", \"#DE7C00\", \"#D77200\", \"#CF6900\", \"#CB6200\", \"#C35900\", \"#BB5100\", \"#B54C00\", \"#B04500\", \"#A63E00\", \"#A13700\", \"#9B3200\", \"#952D00\", \"#8E2900\", \"#882300\", \"#821E00\", \"#7B1A00\", \"#771900\", \"#701400\", \"#6A0E00\", \"#660D00\", \"#5E0B00\", \"#5A0A02\", \"#600903\", \"#520907\", \"#4C0505\", \"#470606\", \"#420607\", \"#3D0708\", \"#370607\", \"#2D0607\", \"#1F0506\"];\n\nconst BeerRow = props => {\n  const beer = props.beer;\n  var srmNumber = beer.srm;\n\n  if (beer.srm < 1) {\n    srmNumber = 1;\n  } else if (beer.srm > 40) {\n    srmNumber = 40;\n  }\n\n  const srmBackgroundColor = srmNumber !== \"\" ? srmToRGBLookupTable[Math.round(srmNumber)] : srmToRGBLookupTable[1]; // TODO: right way to check empty string?\n\n  const srmTextColor = srmNumber > 13 ? \"white\" : \"default\";\n  const bugu = beer.og > 1 ? (beer.ibu / ((beer.og - 1) * 1000)).toFixed(2) : \"0.00\"; // TODO: format to two decimal places\n\n  var calFromAlc = 1881.22 * (beer.fg * (beer.og - beer.fg)) / (1.775 - beer.og);\n  var calFromCarbs = 3550.0 * beer.fg * (0.1808 * beer.og + 0.8192 * beer.fg - 1.0004);\n\n  if (beer.og === 1 && beer.fg === 1) {\n    calFromAlc = 0;\n    calFromCarbs = 0;\n  }\n\n  const calories = (calFromAlc + calFromCarbs).toFixed();\n  const abv = (beer.og - beer.fg) * 131;\n  const beerPoured = ((beer.startAmount - beer.remainAmount) * 128).toFixed();\n  const beerLeft = (beer.remainAmount * 128).toFixed();\n  return __jsx(\"tr\", {\n    style: {\n      backgroundColor: srmBackgroundColor,\n      color: srmTextColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, beer.tapNumber), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, beer.og, \" OG\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, beer.srm, \" SRM\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, bugu, \" BU:GU\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, beer.ibu, \" IBU\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, beer.beername), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, beer.style), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, beer.notes), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, calories, \" kCal\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, abv.toFixed(1), \"% ABV\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, beerPoured, \" oz\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, beerLeft, \" oz\"));\n};\n\nexport default BeerRow;","map":{"version":3,"sources":["/Users/jwhite/Repositories/raspberry-pints/ui-server/components/BeerRow.js"],"names":["srmToRGBLookupTable","BeerRow","props","beer","srmNumber","srm","srmBackgroundColor","Math","round","srmTextColor","bugu","og","ibu","toFixed","calFromAlc","fg","calFromCarbs","calories","abv","beerPoured","startAmount","remainAmount","beerLeft","backgroundColor","color","tapNumber","beername","style","notes"],"mappings":"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","sourcesContent":["const srmToRGBLookupTable = [\n  \"#FFE699\", \"#FFE699\",\n  \"#FFD878\",\n  \"#FFCA5A\",\n  \"#FFBF42\",\n  \"#FBB123\",\n  \"#F8A600\",\n  \"#F39C00\",\n  \"#EA8F00\",\n  \"#E58500\",\n  \"#DE7C00\",\n  \"#D77200\",\n  \"#CF6900\",\n  \"#CB6200\",\n  \"#C35900\",\n  \"#BB5100\",\n  \"#B54C00\",\n  \"#B04500\",\n  \"#A63E00\",\n  \"#A13700\",\n  \"#9B3200\",\n  \"#952D00\",\n  \"#8E2900\",\n  \"#882300\",\n  \"#821E00\",\n  \"#7B1A00\",\n  \"#771900\",\n  \"#701400\",\n  \"#6A0E00\",\n  \"#660D00\",\n  \"#5E0B00\",\n  \"#5A0A02\",\n  \"#600903\",\n  \"#520907\",\n  \"#4C0505\",\n  \"#470606\",\n  \"#420607\",\n  \"#3D0708\",\n  \"#370607\",\n  \"#2D0607\",\n  \"#1F0506\"\n];\n\nconst BeerRow = (props) => {\n  const beer = props.beer;\n  var srmNumber = beer.srm;\n  if (beer.srm < 1) {\n    srmNumber = 1;\n  } else if (beer.srm > 40) {\n    srmNumber = 40;\n  }\n  const srmBackgroundColor = srmNumber !== \"\" ? srmToRGBLookupTable[Math.round(srmNumber)] : srmToRGBLookupTable[1]; // TODO: right way to check empty string?\n  const srmTextColor = srmNumber > 13 ? \"white\" : \"default\";\n  const bugu = beer.og > 1 ? (beer.ibu / ((beer.og - 1) * 1000)).toFixed(2) : \"0.00\"; // TODO: format to two decimal places\n\n  var calFromAlc = (1881.22 * (beer.fg * (beer.og - beer.fg))) / (1.775 - beer.og);\n  var calFromCarbs = 3550.0 * beer.fg * ((0.1808 * beer.og) + (0.8192 * beer.fg) - 1.0004);\n\n  if ((beer.og === 1) && (beer.fg === 1)) {\n    calFromAlc = 0;\n    calFromCarbs = 0;\n  }\n\n  const calories = (calFromAlc + calFromCarbs).toFixed();\n  const abv = (beer.og - beer.fg) * 131;\n  const beerPoured = ((beer.startAmount - beer.remainAmount) * 128).toFixed();\n  const beerLeft = (beer.remainAmount * 128).toFixed();\n\n  return (\n    <tr style={{backgroundColor: srmBackgroundColor, color: srmTextColor}}>\n      <td>{beer.tapNumber}</td>\n      <td>{beer.og} OG</td>\n      <td>{beer.srm} SRM</td>\n      <td>{bugu} BU:GU</td>\n      <td>{beer.ibu} IBU</td>\n      <td>{beer.beername}</td>\n      <td>{beer.style}</td>\n      <td>{beer.notes}</td>\n      <td>{calories} kCal</td>\n      <td>{abv.toFixed(1)}% ABV</td>\n      <td>{beerPoured} oz</td>\n      <td>{beerLeft} oz</td>\n    </tr>\n  )\n}\n\nexport default BeerRow;\n"]},"metadata":{},"sourceType":"module"}